# -*- coding: utf-8 -*-
"""notebook.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZqMfcuSlRAHHjb6Xfm8um2irmoxYcn2i
"""

import pandas as pd
import numpy as np

# Read in the dataset as a pandas DataFrame
dataset = pd.read_csv('bank_marketing.csv')
dataset.head(5)

# Split the data into three DataFrames
# The first will contain information about the client
client = dataset[["client_id", "age", "job", "marital", "education", "credit_default", "housing", "loan"]]
client.head(5)

# The second DataFrame will contain campaign data
campaign = dataset[["client_id", "campaign", "month", "day", "duration", "pdays", "previous", "poutcome", "y"]]
campaign.head(5)

# The third DataFrame will store information about economics at the time of the campaign
economics = dataset[["client_id", "emp_var_rate", "cons_price_idx", "euribor3m", "nr_employed"]]
economics.head(5)

# Renaming columns
new_colnames_client = {"client_id": "id"}
client = client.rename(columns = new_colnames_client)

new_colnames_campaign = {"duration": "contact_duration",
                         "previous": "previous_campaign_contacts",
                         "y": "campaign_outcome",
                         "poutcome": "previous_outcome",
                         "campaign": "number_contacts"}
campaign = campaign.rename(columns = new_colnames_campaign)

new_colnames_economics = {"euribor3m": "euribor_three_months",
                          "nr_employed": "number_employed"}
economics = economics.rename(columns = new_colnames_economics)

# Replacing values in the client DataFrame
client["education"] = client["education"].str.replace(".", "_")
client = client.replace("unknown", np.NaN)
client["job"] = client["job"].str.replace(".", "")
print(client.dtypes)
client.head(5)

# Replacing values in the campaign DataFrame
campaign = campaign.replace("success", 1)
campaign = campaign.replace("failure", 0)
campaign = campaign.replace("nonexistent", np.NaN)
campaign.head(5)

# Creating new columns in the campaign DataFrame
campaign["campaign_id"] = "1"
campaign["month"] = campaign["month"].str.capitalize()
campaign["year"] = "2022"
campaign["day"] = campaign["day"].astype("string")
campaign["last_contact_date"] = campaign["year"] + "-" + campaign["month"] + "-" + campaign["day"]
campaign["last_contact_date"] = pd.to_datetime(campaign["last_contact_date"], format = "%Y-%b-%d")
campaign["last_contact_date"] = campaign["last_contact_date"].dt.strftime("%Y-%b-%d")
campaign = campaign.drop(["month", "day", "year"], axis = 1)
print(campaign.dtypes)
campaign.head(5)

# Saving the data into three separate csv files
client.to_csv("client.csv", index = False)
campaign.to_csv("campaign.csv", index = False)
economics.to_csv("economics.csv", index = False)

# Creating the client table
client_table = """CREATE TABLE client
(
    id SERIAL PRIMARY KEY,
    age INTEGER,
    job TEXT,
    marital TEXT,
    education TEXT,
    credit_default BOOLEAN,
    housing BOOLEAN,
    loan BOOLEAN
);
\copy client FROM 'client.csv' DELIMITER ',' CSV HEADER
"""

# Creating the campaign table
campaign_table = """CREATE TABLE campaign
(
    campaign_id SERIAL PRIMARY KEY,
    client_id SERIAL references client (id),
    number_contacts INTEGER,
    contact_duration INTEGER,
    pdays INTEGER,
    previous_campaign_contacts INTEGER,
    previous_outcome BOOLEAN,
    campaign_outcome BOOLEAN,
    last_contact_date DATE
);
\copy campaign FROM 'campaign.csv' DELIMITER ',' CSV HEADER
"""

# Creating the economics table
economics_table = """CREATE TABLE economics
(
    client_id SERIAL references client (id),
    emp_var_rate FLOAT,
    cons_price_idx FLOAT,
    euribor_three_months FLOAT,
    number_employed FLOAT,
);
\copy economics FROM 'economics.csv' DELIMITER ',' CSV HEADER
"""